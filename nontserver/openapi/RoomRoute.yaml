/room:
  get:
    description: fetch all rooms
    tags: 
      - rooms
    security:
      - bearerAuth: []
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Rooms"
      500:
        $ref: "#/components/responseMessage/status500"
  post:
    description: create new room
    tags: 
      - rooms
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/requestBodies/createBody"
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      400:
        $ref: "#/components/responseMessage/status400"
      500:
        $ref: "#/components/responseMessage/status500"
/room/id/{id}:
  get:
    description: fetch one room using room_id
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      500:
        $ref: "#/components/responseMessage/status500"
/room/name/{name}:
  get:
    description: fetch rooms using room_name
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Rooms"
      500:
        $ref: "#/components/responseMessage/status500"
/room/nont-type/{type}:
  get:
    description: fetch rooms using nont_type
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Rooms"
      500:
        $ref: "#/components/responseMessage/status500"
/room/shelterid/{id}:
  get:
    description: fetch rooms using shelter_id
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Rooms"
      500:
        $ref: "#/components/responseMessage/status500"
/room/update/{id}:
  patch:
    description: update room
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/requestBodies/updateBody"
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      400:
        $ref: "#/components/responseMessage/status400"
      500:
        $ref: "#/components/responseMessage/status500"
/room/delete/{id}:
  patch:
    description: delete room (update exist to false)
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      400:
        $ref: "#/components/responseMessage/status400"
      500:
        $ref: "#/components/responseMessage/status500"
/room/remove/{id}:
  delete:
    description: remove room from database
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
      400:
        $ref: "#/components/responseMessage/status400"
      500:
        $ref: "#/components/responseMessage/status500"
/room/admin_update/{id}:
  put:
    description: update room
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/requestBodies/updateBody"
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      500:
        $ref: "#/components/responseMessage/status500"
/room/admin_get/{id}:
  get:
    description: fetch one room using room_id
    tags: 
      - rooms
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success Response
        content:
          application/json:
            schema:
              $ref: "RoomSchema.yaml#/Room"
      500:
        $ref: "#/components/responseMessage/status500"

components:
  requestBodies:
    createBody:
      type: object
      required:
        - name
        - nont_type
        - amount
        - price
        - shelter_id
      properties:
        name:
          type: string
        nont_type:
          type: string
        amount:
          type: number
        price:
          type: number
        shelter_id:
          type: string

    updateBody:
      type: object
      properties:
        name:
          type: string
        nont_type:
          type: string
        amount:
          type: number
        price:
          type: number
  responseMessage:
    status400:
      description: Data Validation Error
      content:
        text/plain:
          schema:
            type: string
    status500:
      description: Internal Server Error
      content:
        text/plain:
          schema:
            type: string

