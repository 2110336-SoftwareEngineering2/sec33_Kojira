/nont:
  get:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Fetch all nonts' document
    responses:
      200:
        description: Successfully fetched
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nonts'
/nont/{id}:
  get:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Fetch nont's document using id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successfully fetched
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'
/nont/name/{name}:
  get:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Fetch nonts' document using name parameter
    parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successfully fetched
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nonts'
/nont/type/{type}:
  get:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Fetch nonts' document using type parameter
    parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successfully fetched
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nonts'
/nont/nontowner_id/{id}:
  get:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Fetch nonts' document using nontowner id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successfully fetched
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nonts'
/nont/create:
  post:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Nontowner creates nont's document
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'NontSchema.yaml#/req_body/create'
    responses:
      200:
        description: Successfully created
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'
/nont/update/{id}:
  put:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Nontowner updates nont's document using id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'NontSchema.yaml#/req_body/update'
    responses:
      200:
        description: Successfully updated
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'
/nont/delete/{id}:
  patch:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Nontowner deletes nont using id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        summary: {exist:false}
        description: Successfully deleted
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'
/nont/remove/{id}:
  delete:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Admin removes nont's document using id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successfully removed
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'
/nont/admin_update/{id}:
  put:
    tags: 
      - nonts
    security:
      - bearerAuth: []
    description: Admin updates nont's document using id parameter
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'NontSchema.yaml#/req_body/admin_update'
    responses:
      200:
        description: Successfully updated by admin
        content:
          application/json:
            schema:
              $ref: 'NontSchema.yaml#/res/nont'